// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Notizap.Api.Migrations
{
    [DbContext(typeof(NotizapDbContext))]
    [Migration("20250514143957_RemoveReelEntity")]
    partial class RemoveReelEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CampaignMailchimp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CampaignId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ClickRate")
                        .HasColumnType("numeric");

                    b.Property<int>("Conversions")
                        .HasColumnType("integer");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmailsSent")
                        .HasColumnType("integer");

                    b.Property<decimal>("OpenRate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CampaignMailchimps");
                });

            modelBuilder.Entity("Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("InstagramPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Clicks")
                        .HasColumnType("double precision");

                    b.Property<int>("Comments")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Engagement")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Impressions")
                        .HasColumnType("integer");

                    b.Property<long>("Interactions")
                        .HasColumnType("bigint");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Reach")
                        .HasColumnType("integer");

                    b.Property<int>("Saved")
                        .HasColumnType("integer");

                    b.Property<int>("Shares")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VideoViews")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("InstagramPosts");
                });

            modelBuilder.Entity("InstagramReel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Comentarios")
                        .HasColumnType("integer");

                    b.Property<int>("Compartidos")
                        .HasColumnType("integer");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Engagement")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Guardados")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Interacciones")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<int>("Reach")
                        .HasColumnType("integer");

                    b.Property<string>("ReelId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VideoViews")
                        .HasColumnType("integer");

                    b.Property<int>("Views")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReelId")
                        .IsUnique();

                    b.ToTable("InstagramReels");
                });

            modelBuilder.Entity("InstagramStory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Exits")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Impressions")
                        .HasColumnType("integer");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("text");

                    b.Property<string>("Permalink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Reach")
                        .HasColumnType("integer");

                    b.Property<int>("Replies")
                        .HasColumnType("integer");

                    b.Property<int>("TapsBack")
                        .HasColumnType("integer");

                    b.Property<int>("TapsForward")
                        .HasColumnType("integer");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("InstagramStories");
                });

            modelBuilder.Entity("MercadoLibreManualReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitsSold")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("MercadoLibreManualReports");
                });

            modelBuilder.Entity("WooCommerceMonthlyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("numeric");

                    b.Property<int>("Store")
                        .HasColumnType("integer");

                    b.Property<int>("UnitsSold")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("WooCommerceMonthlyReports");
                });

            modelBuilder.Entity("WooDailySale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MonthlyReportId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("numeric");

                    b.Property<int>("UnitsSold")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyReportId");

                    b.ToTable("WooDailySales");
                });

            modelBuilder.Entity("WooDailySale", b =>
                {
                    b.HasOne("WooCommerceMonthlyReport", "MonthlyReport")
                        .WithMany("DailySales")
                        .HasForeignKey("MonthlyReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthlyReport");
                });

            modelBuilder.Entity("WooCommerceMonthlyReport", b =>
                {
                    b.Navigation("DailySales");
                });
#pragma warning restore 612, 618
        }
    }
}
